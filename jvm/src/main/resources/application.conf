akka {

  actor {
    serializers {
      crawler-response = "com.boldradius.clusterconsole.serializer.CrawlerResponseSerializer"
      change-set-event = "com.boldradius.clusterconsole.serializer.ChangeSetEventSerializer"
      result-added-event = "com.boldradius.clusterconsole.serializer.ResultAddedEventSerializer"
      campaign-persisted-event = "com.boldradius.clusterconsole.serializer.CampaignPersistedSerializer"
    }

    serialization-bindings {
      "crawler.writer.CrawlerGuardian$CrawlerResponse" = crawler-response
      "domain.update.DomainWriter$BeginTransaction" = change-set-event
      "domain.TeamAggregate$ResultAdded" = result-added-event
      "domain.CrawlerCampaign$CampaignPersistedEvent" = campaign-persisted-event
    }
  }

  loglevel = INFO
  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
  }


  cluster {
    metrics {
      # Disable legacy metrics in akka-cluster.
      enabled=off
    }
  }

  # Log the complete configuration at INFO level when the actor system is started.
  # This is useful when you are uncertain of what configuration is used.
  log-config-on-start = off
  log-dead-letters = off
  log-dead-letters-during-shutdown = off

}

clusterConsole {
  productionMode = false
  productionMode = ${?PRODUCTION_MODE}
}
